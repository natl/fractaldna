# Poetry pyproject.toml: https://python-poetry.org/docs/pyproject/
[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "fractaldna"
version = "0.4.0"
description = "FractalDNA is a Python package built to generate DNA geometries for simulations"
readme = "README.md"
authors = ["Nathanael Lampe"]
license = "MIT"
repository = "https://github.com/natl/fractaldna"
homepage = "https://github.com/natl/fractaldna"
documentation = "https://natl.github.io/fractaldna"

# Keywords description https://python-poetry.org/docs/pyproject/#keywords
keywords = ["dna", "geant4", "simulation", "modelling"]  #! Update me

# Pypi classifiers: https://pypi.org/classifiers/
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "Topic :: Scientific/Engineering :: Medical Science Apps.",
  "Topic :: Scientific/Engineering :: Bio-Informatics",
  "Operating System :: OS Independent",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
]

[tool.poetry.scripts]
# Entry points for the package https://python-poetry.org/docs/pyproject/#scripts
"fractaldna" = "fractaldna.__main__:app"

[tool.poetry.dependencies]
python = ">=3.8,<3.11"
typer = {extras = ["all"], version = ">=0.3.2,<0.5.0"}
rich = ">=10.7,<12.0"
numpy = "^1.22.0"
pandas = "^1.3.3"
matplotlib = "^3.4.3"
scipy = "^1.8.0"
pytest = "^6.2.5"
importlib-metadata = "^4.8.2"
tqdm = "^4.62.3"
mistune = "0.8.4"

[tool.poetry.dev-dependencies]
bandit = "^1.7.0"
black = {version = "^22.1", allow-prereleases = true}
darglint = "^1.8.0"
isort = {extras = ["colors"], version = "^5.9.3"}
mypy = "^0.931"
mypy-extensions = "^0.4.3"
pre-commit = "^2.14.0"
pydocstyle = "^6.1.1"
pylint = "^2.10.2"
pytest = "^6.2.4"
pyupgrade = "^2.24.0"
safety = "^1.10.3"
Sphinx = "^4.2.0"
sphinx-rtd-theme = "^1.0.0"
sphinx-autodoc-typehints = "^1.16.0"
ipykernel = "^6.6.0"
ipyevents = "^2.0.1"
nbsphinx = "^0.8.8"

[tool.poetry.extras]
mayavi = ["mayavi", "PyQt5", "vtk"]

[tool.black]
# https://github.com/psf/black
target-version = ["py38"]
line-length = 88
color = true

exclude = '''
/(
    \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | env
    | venv
)/
'''

[tool.isort]
# https://github.com/timothycrosley/isort/
py_version = 38
line_length = 88

known_typing = ["typing", "types", "typing_extensions", "mypy", "mypy_extensions"]
sections = ["FUTURE", "TYPING", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
include_trailing_comma = true
profile = "black"
multi_line_output = 3
indent = 4
color_output = true

[tool.mypy]
# https://mypy.readthedocs.io/en/latest/config_file.html#using-a-pyproject-toml-file
python_version = 3.8
pretty = true
show_traceback = true
color_output = true

allow_redefinition = false
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
ignore_missing_imports = true
implicit_reexport = false
no_implicit_optional = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
strict_equality = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true


[tool.pytest.ini_options]
# https://docs.pytest.org/en/6.2.x/customize.html#pyproject-toml
# Directories that are not visited by pytest collector:
norecursedirs =["hooks", "*.egg", ".eggs", "dist", "build", "docs", ".tox", ".git", "__pycache__"]
doctest_optionflags = ["NUMBER", "NORMALIZE_WHITESPACE", "IGNORE_EXCEPTION_DETAIL"]

# Extra options:
addopts = [
  "--strict-markers",
  "--tb=short",
  "--doctest-modules",
  "--doctest-continue-on-failure",
]
